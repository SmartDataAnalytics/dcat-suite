<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>dcat-suite-app</artifactId>
	<packaging>${packaging.type}</packaging>

	<parent>
		<groupId>org.aksw.dcat-suite</groupId>
		<artifactId>dcat-suite-parent</artifactId>
		<version>1.1.2-SNAPSHOT</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<packaging.type>jar</packaging.type>

		<vaadin.version>14.6.1</vaadin.version>
		<!-- <spring-boot.version>2.3.3.RELEASE</spring-boot.version> -->


		<drivers.dir>${project.basedir}/drivers</drivers.dir>
		<drivers.downloader.phase>pre-integration-test</drivers.downloader.phase>
	</properties>

	<repositories>
		<!-- The order of definitions matters. Explicitly defining central here 
			to make sure it has the highest priority. -->

		<!-- Main Maven repository -->
		<repository>
			<id>central</id>
			<url>https://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!-- Repository used by many Vaadin add-ons -->
		<repository>
			<id>Vaadin Directory</id>
			<url>https://maven.vaadin.com/vaadin-addons</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<!-- Main Maven repository -->
		<pluginRepository>
			<id>central</id>
			<url>https://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<dependencyManagement>
		<dependencies>
			<!-- <dependency> -->
			<!-- <groupId>org.springframework.boot</groupId> -->
			<!-- <artifactId>spring-boot-starter-parent</artifactId> -->
			<!-- <version>2.2.0.RELEASE</version> -->
			<!-- </dependency> -->
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>


			<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-framework-bom</artifactId> 
				<type>pom</type> <version>5.1.14.RELEASE</version> <scope>import</scope> 
				<! - - <exclusions> <exclusion> <groupId>javax.servlet</groupId> <artifactId>servlet-api</artifactId> 
				</exclusion> </exclusions> - - > </dependency> -->


			<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-web</artifactId> 
				</dependency> -->
			<!-- <dependency> -->
			<!-- <groupId>org.springframework</groupId> -->
			<!-- <artifactId>spring-cloud-starter-config</artifactId> -->
			<!-- <version>2.2.5.RELEASE</version> -->
			<!-- </dependency> -->
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
		</dependency>


		<dependency>
			<groupId>com.vaadin</groupId>
			<!-- Replace artifactId with vaadin-core to use only free components -->
			<artifactId>vaadin</artifactId>
			<exclusions>
				<!-- Webjars are only needed when running in Vaadin 13 compatibility 
					mode -->
				<exclusion>
					<groupId>com.vaadin.webjar</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.insites</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.polymer</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.polymerelements</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.vaadin</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.webjars.bowergithub.webcomponents</groupId>
					<artifactId>*</artifactId>
				</exclusion>

				<exclusion>
					<groupId>org.webjars.bowergithub.webcomponents</groupId>
					<artifactId>*</artifactId>
				</exclusion>

				<exclusion>
					<groupId>org.webjars.npm</groupId>
					<artifactId>*</artifactId>
				</exclusion>

			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring-boot-starter</artifactId>
			<exclusions>
				<!-- Excluding so that webjars are not included. -->
				<exclusion>
					<groupId>com.vaadin</groupId>
					<artifactId>vaadin-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
				<!--<exclusion> <groupId>com.fasterxml.jackson.datatype</groupId> <artifactId>jackson-datatype-jdk8</artifactId> 
					</exclusion> <exclusion> <groupId>com.fasterxml.jackson.datatype</groupId> 
					<artifactId>jackson-datatype-jsr310</artifactId> </exclusion> <exclusion> 
					<groupId>com.fasterxml.jackson.module</groupId> <artifactId>jackson-module-parameter-names</artifactId> 
					</exclusion> -->
			</exclusions>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>org.springframework.boot</groupId> -->
		<!-- <artifactId>spring-boot-devtools</artifactId> -->
		<!-- <version>${spring-boot.version}</version> -->
		<!-- <optional>true</optional> -->
		<!-- <scope>runtime</scope> -->
		<!-- </dependency> -->

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<version>${spring-boot.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aksw.scaseco.vaadin</groupId>
			<artifactId>vaadin-jena-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aksw.scaseco.vaadin</groupId>
			<artifactId>vaadin-jena-shacl-editor</artifactId>
		</dependency>

		<dependency>
			<groupId>org.cryptomator</groupId>
			<artifactId>webdav-nio-adapter</artifactId>
			<version>1.2.0</version>

			<exclusions>
				<exclusion>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-server</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-webapp</artifactId>
				</exclusion>
				<!-- <exclusion> <groupId>com.google.guava</groupId> <artifactId>guava</artifactId> 
					</exclusion> -->

			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.aksw.jenax</groupId>
			<artifactId>jenax-reprogen-shacl</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aksw.jenax</groupId>
			<artifactId>jenax-models-foaf</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aksw.jenax</groupId>
			<artifactId>jenax-rx-dataaccess</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aksw.jenax</groupId>
			<artifactId>jenax-arq-datapaths</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aksw.jenax</groupId>
			<artifactId>jenax-arq-relations</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aksw.jenax</groupId>
			<artifactId>jenax-arq-plugins-bundle</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aksw.jenax</groupId>
			<artifactId>jenax-fsrdfstore-facade</artifactId>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>org.aksw.difs</groupId> -->
		<!-- <artifactId>difs-system</artifactId> -->
		<!-- <version>1.0.0-SNAPSHOT</version> -->
		<!-- <exclusions> -->
		<!-- <exclusion> -->
		<!-- <groupId>org.aksw.jenax</groupId> -->
		<!-- <artifactId>jenax-server-standalone</artifactId> -->
		<!-- </exclusion> -->
		<!-- </exclusions> -->
		<!-- </dependency> -->

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>

		<dependency>
			<groupId>org.tmatesoft.svnkit</groupId>
			<artifactId>svnkit</artifactId>
			<version>1.10.4</version>
		</dependency>


		<!-- PDFViewer which hower does not seem to work with flow -->
		<!-- <dependency> -->
		<!-- <groupId>com.whitestein.vaadin.widgets</groupId> -->
		<!-- <artifactId>wt-pdf-viewer</artifactId> -->
		<!-- <version>2.0.1</version> -->
		<!-- </dependency> -->

		<dependency>
			<groupId>org.vaadin.alejandro</groupId>
			<artifactId>pdf-browser</artifactId>
			<version>3.0.1</version>
		</dependency>


		<dependency>
			<groupId>org.aksw.dcat-suite</groupId>
			<artifactId>dcat-suite-cli</artifactId>
			<!--<exclusions> <exclusion> <groupId>org.glassfish.jersey.media</groupId> 
				<artifactId>jersey-media-json-jackson</artifactId> </exclusion> </exclusions> -->
		</dependency>


		<!-- Syntax highlighting -->
		<dependency>
			<groupId>de.f0rce</groupId>
			<artifactId>ace</artifactId>
			<version>1.3.4</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.10.0</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.10.0</version>
		</dependency>

		<dependency>
			<groupId>com.xdev-software</groupId>
			<artifactId>vaadin-maps-leaflet-flow</artifactId>
			<version>1.0.4</version>
			<!-- <exclusions> <exclusion> <groupId>com.fasterxml.jackson.core</groupId> 
				<artifactId>jackson-databind</artifactId> </exclusion> </exclusions> -->
		</dependency>


		<dependency>
			<groupId>org.claspina</groupId>
			<artifactId>confirm-dialog</artifactId>
			<version>2.0.0</version>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>com.vaadin</groupId> -->
		<!-- <artifactId>leaflet4vaadin</artifactId> -->
		<!-- <version>0.3.2</version> -->
		<!-- </dependency> -->

		<!-- <dependency> -->
		<!-- <groupId>com.fasterxml.jackson.core</groupId> -->
		<!-- <artifactId>jackson-core</artifactId> -->
		<!-- <version>1.8.0_242</version> -->
		<!-- </dependency> -->

		<!-- <dependency> -->
		<!-- <groupId>com.fasterxml.jackson.core</groupId> -->
		<!-- <artifactId>jackson-databind</artifactId> -->
		<!-- <version>1.8.0_242</version> -->
		<!-- </dependency> -->

		<!-- <dependency> -->
		<!-- <groupId>com.fasterxml.jackson.core</groupId> -->
		<!-- <artifactId>jackson-annotations</artifactId> -->
		<!-- <version>1.8.0_242</version> -->
		<!-- </dependency> -->

		<dependency>
			<groupId>org.topbraid</groupId>
			<artifactId>shacl</artifactId>
			<version>1.3.2</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.jena</groupId>
					<artifactId>jena-arq</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>jena-shacl</artifactId>
		</dependency>

		<!-- implied by jenax-arq-plugins-bundle -->
		<!-- <dependency> -->
		<!-- <groupId>org.apache.jena</groupId> -->
		<!-- <artifactId>jena-geosparql</artifactId> -->
		<!-- </dependency> -->


		<dependency>
			<groupId>org.vaadin.helper</groupId>
			<artifactId>async-manager</artifactId>
			<version>1.1.0</version>
		</dependency>


		<dependency>
			<groupId>org.aksw.scaseco.vaadin</groupId>
			<artifactId>vaadin-jena-geo</artifactId>
		</dependency>

		<!-- <dependency> <groupId>org.hobbit</groupId> <artifactId>facete3-app-shared</artifactId> 
			</dependency> <dependency> <groupId>org.hobbit</groupId> <artifactId>facete3-impl</artifactId> 
			</dependency> -->

		<!--<dependency> <groupId>org.aksw.dcat-suite</groupId> <artifactId>dcat-suite-cli</artifactId> 
			<version>1.1.1-SNAPSHOT</version> </dependency> -->

		<!-- <dependency> <groupId>commons-codec</groupId> <artifactId>commons-codec</artifactId> 
			<version>1.14</version> </dependency> -->

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-testbench</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<defaultGoal>spring-boot:run</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<!-- Clean build and startup time for Vaadin apps sometimes may exceed 
					the default Spring Boot's 30sec timeout. -->
				<configuration>
					<wait>500</wait>
					<maxAttempts>240</maxAttempts>
					<fork>true</fork>
				</configuration>
			</plugin>

			<!-- Take care of synchronizing java dependencies and imports in package.json 
				and main.js files. It also creates webpack.config.js if not exists yet. -->
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-frontend</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- Production mode is activated using -Pproduction -->
			<id>production</id>
			<properties>
				<vaadin.productionMode>true</vaadin.productionMode>
				<packaging.type>war</packaging.type>
			</properties>

			<dependencies>
				<dependency>
					<groupId>com.vaadin</groupId>
					<artifactId>flow-server-production-mode</artifactId>
				</dependency>
			</dependencies>

			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<jvmArguments>-Dvaadin.productionMode</jvmArguments>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.vaadin</groupId>
						<artifactId>vaadin-maven-plugin</artifactId>
						<version>${vaadin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>build-frontend</goal>
								</goals>
								<phase>compile</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>3.2.3</version>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.tomcat.maven</groupId>
						<artifactId>tomcat7-maven-plugin</artifactId>
						<version>2.2</version>
						<configuration>
							<server>TomcatServer</server>
							<path>/facete3</path>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>integration-tests</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>start-spring-boot</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop-spring-boot</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- Runs the integration tests (*IT) after the server is started -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<trimStackTrace>false</trimStackTrace>
							<enableAssertions>true</enableAssertions>
							<systemPropertyVariables>
								<!-- Pass location of downloaded webdrivers to the tests -->
								<webdriver.chrome.driver>${webdriver.chrome.driver}</webdriver.chrome.driver>
							</systemPropertyVariables>
						</configuration>
					</plugin>

					<plugin>
						<groupId>com.lazerycode.selenium</groupId>
						<artifactId>driver-binary-downloader-maven-plugin</artifactId>
						<version>1.0.17</version>
						<configuration>
							<onlyGetDriversForHostOperatingSystem>true
							</onlyGetDriversForHostOperatingSystem>
							<rootStandaloneServerDirectory>
								${project.basedir}/drivers/driver
							</rootStandaloneServerDirectory>
							<downloadedZipFileDirectory>
								${project.basedir}/drivers/driver_zips
							</downloadedZipFileDirectory>
							<customRepositoryMap>
								${project.basedir}/drivers.xml
							</customRepositoryMap>
						</configuration>
						<executions>
							<execution>
								<!-- use phase "none" to skip download step -->
								<phase>${drivers.downloader.phase}</phase>
								<goals>
									<goal>selenium</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>
</project>
